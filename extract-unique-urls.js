/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
 */

const fs = require('fs-extra');
const path = require('path');

// –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
const jsonFilePath = path.join(__dirname, 'data', 'results', 'bfl', 'bfl_results_2025-05-24T15-46-56.json');
// –ü—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ URL
const uniqueUrlsFilePath = path.join(__dirname, 'data', 'results', 'bfl', 'russian_unique_urls.csv');
// –ü—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É TXT-—Ñ–∞–π–ª—É —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ URL (—Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ URL)
const uniqueUrlsTxtFilePath = path.join(__dirname, 'data', 'results', 'bfl', 'russian_unique_urls.txt');

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL —Ä–æ—Å—Å–∏–π—Å–∫–∏–º
 */
function isRussianUrl(url) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –∏–º–µ–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç
    if (!url || typeof url !== 'string') {
      return false;
    }
    
    // –ü–∞—Ä—Å–∏–º URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞
    const urlObj = new URL(url);
    const domain = urlObj.hostname.toLowerCase();
    
    // –†–æ—Å—Å–∏–π—Å–∫–∏–µ –¥–æ–º–µ–Ω—ã
    const russianDomains = [
      // –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –¥–æ–º–µ–Ω—ã
      '.ru', '.—Ä—Ñ', '.su', '.–º–æ—Å–∫–≤–∞', '.moscow', '.tatar', 
      // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã
      'yandex.ru', 'mail.ru', 'vk.com', 'ok.ru', 'ria.ru', 'rbc.ru', 'consultant.ru',
      'garant.ru', 'gosuslugi.ru', 'nalog.ru', 'pfr.gov.ru', 'mos.ru', 'sberbank.ru',
      'vtb.ru', 'alfabank.ru', 'tinkoff.ru', 'avito.ru', 'ozon.ru', 'wildberries.ru',
      'kinopoisk.ru', 'ivi.ru', 'lenta.ru', 'iz.ru', 'kp.ru', 'aif.ru', 'mk.ru',
      'gazeta.ru', 'kommersant.ru', 'vedomosti.ru', 'fontanka.ru', 'rospotrebnadzor.ru',
      'fssp.gov.ru', 'fns.gov.ru', 'arbitr.ru', 'cbr.ru', 'banki.ru', 'asv.org.ru',
      'bankrot.fedresurs.ru', 'fas.gov.ru', 'genproc.gov.ru', 'rosreestr.gov.ru'
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∑–æ–Ω–∞–º –∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –¥–æ–º–µ–Ω–∞–º
    return russianDomains.some(russianDomain => {
      // –ï—Å–ª–∏ —ç—Ç–æ –∑–æ–Ω–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ—á–∫–∏)
      if (russianDomain.startsWith('.')) {
        return domain.endsWith(russianDomain);
      }
      // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–º–µ–Ω
      return domain === russianDomain || domain.endsWith('.' + russianDomain);
    });
  } catch (error) {
    // –ï—Å–ª–∏ URL –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –Ω–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL
 */
async function extractUniqueUrls() {
  try {
    console.log('üîÑ –ß—Ç–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if (!fs.existsSync(jsonFilePath)) {
      throw new Error(`–§–∞–π–ª ${jsonFilePath} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    }
    
    // –ß–∏—Ç–∞–µ–º JSON-—Ñ–∞–π–ª
    const jsonData = fs.readJsonSync(jsonFilePath);
    
    // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL
    const uniqueUrls = new Set();
    
    // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ URL
    const urlInfo = {};
    
    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≥–æ—Ä–æ–¥–∞
    Object.keys(jsonData.citiesData).forEach(cityName => {
      const cityData = jsonData.citiesData[cityName];
      
      // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞
      Object.keys(cityData.keywords).forEach(keyword => {
        const keywordData = cityData.keywords[keyword];
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ø–Ω–¥–µ–∫—Å–∞
        if (keywordData.yandex && keywordData.yandex.uniqueResults) {
          keywordData.yandex.uniqueResults.forEach((result, index) => {
            if (result.url && isRussianUrl(result.url)) { // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ URL
              uniqueUrls.add(result.url);
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ URL
              if (!urlInfo[result.url]) {
                urlInfo[result.url] = {
                  title: result.title || '',
                  sources: []
                };
              }
              urlInfo[result.url].sources.push(`YANDEX: ${cityName} - ${keyword}`);
            }
          });
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Google
        if (keywordData.google && keywordData.google.uniqueResults) {
          keywordData.google.uniqueResults.forEach((result, index) => {
            if (result.url && isRussianUrl(result.url)) { // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ URL
              uniqueUrls.add(result.url);
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ URL
              if (!urlInfo[result.url]) {
                urlInfo[result.url] = {
                  title: result.title || '',
                  sources: []
                };
              }
              urlInfo[result.url].sources.push(`GOOGLE: ${cityName} - ${keyword}`);
            }
          });
        }
      });
    });
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤ –º–∞—Å—Å–∏–≤
    const uniqueUrlsArray = Array.from(uniqueUrls);
    
    // –°–æ–∑–¥–∞–µ–º CSV —Å BOM-–º–∞—Ä–∫–µ—Ä–æ–º –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    let csvContent = '\ufeff' + 'url,title,count_sources,sources\n';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ CSV
    uniqueUrlsArray.forEach(url => {
      const info = urlInfo[url];
      const sourcesCount = info.sources.length;
      const sourcesText = info.sources.join(' | ');
      
      csvContent += `"${url}","${info.title.replace(/"/g, '""')}",${sourcesCount},"${sourcesText.replace(/"/g, '""')}"\n`;
    });
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π TXT-—Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ —Å URL (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)
    let txtContent = uniqueUrlsArray.join('\n');
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª—ã
    console.log(`üîÑ –ó–∞–ø–∏—Å—å ${uniqueUrlsArray.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL –≤ —Ñ–∞–π–ª—ã...`);
    fs.writeFileSync(uniqueUrlsFilePath, csvContent, { encoding: 'utf8' });
    fs.writeFileSync(uniqueUrlsTxtFilePath, txtContent, { encoding: 'utf8' });
    
    console.log(`‚úÖ CSV —Ñ–∞–π–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ URL —Å–æ–∑–¥–∞–Ω: ${uniqueUrlsFilePath}`);
    console.log(`‚úÖ TXT —Ñ–∞–π–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ URL —Å–æ–∑–¥–∞–Ω: ${uniqueUrlsTxtFilePath}`);
    console.log(`üìä –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL: ${uniqueUrlsArray.length}`);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL
extractUniqueUrls();
