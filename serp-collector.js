/**
 * @file serp-collector.js
 * @description –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏ –Ø–Ω–¥–µ–∫—Å–∞ –∏ Google –¥–ª—è 100 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑
 * @author Sergei Dyshkant (SergD)
 */

require('dotenv').config();
const fs = require('fs-extra');
const path = require('path');
const { XmlRiverApi } = require('./src/xmlriver-api');
const readline = require('readline');

// –ö–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –∏–∑ —Ñ–∞–π–ª–∞
const readKeywordsFromFile = (filePath) => {
  return new Promise((resolve, reject) => {
    try {
      const keywords = [];
      const fileStream = fs.createReadStream(filePath);
      const rl = readline.createInterface({
        input: fileStream,
        crlfDelay: Infinity
      });

      rl.on('line', (line) => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ ':')
        const trimmedLine = line.trim();
        if (trimmedLine && 
            !trimmedLine.startsWith('#') && 
            !trimmedLine.startsWith('‚∏º') && 
            !trimmedLine.endsWith(':')) {
          keywords.push(trimmedLine);
        }
      });

      rl.on('close', () => {
        console.log(`–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${keywords.length} –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –∏ ${Object.keys(MAJOR_CITIES).length} –≥–æ—Ä–æ–¥–æ–≤`);
        console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∞: Yandex - ${CONFIG.collection.yandexPageSize} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/—Å—Ç—Ä–∞–Ω–∏—Ü–∞, Google - ${CONFIG.collection.googlePageSize} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/–∑–∞–ø—Ä–æ—Å`);
        resolve(keywords);
      });

      rl.on('error', (err) => {
        reject(err);
      });
    } catch (error) {
      reject(error);
    }
  });
};

// –°–ø–∏—Å–æ–∫ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏ —Å –Ω–∞—Å–µ–ª–µ–Ω–∏–µ–º –±–æ–ª–µ–µ 500k —á–µ–ª–æ–≤–µ–∫
const MAJOR_CITIES = {
  '–ú–æ—Å–∫–≤–∞': 213,          // Moscow
  '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': 2,   // Saint Petersburg
  '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 65,      // Novosibirsk
  '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 54,     // Ekaterinburg
  '–ö–∞–∑–∞–Ω—å': 43,           // Kazan
  '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥': 47,  // Nizhny Novgorod
  '–ß–µ–ª—è–±–∏–Ω—Å–∫': 56,        // Chelyabinsk
  '–û–º—Å–∫': 66,             // Omsk
  '–°–∞–º–∞—Ä–∞': 51,           // Samara
  '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É': 39,   // Rostov-on-Don
  '–£—Ñ–∞': 172,             // Ufa
  '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 62,       // Krasnoyarsk
  '–í–æ—Ä–æ–Ω–µ–∂': 193,         // Voronezh
  '–ü–µ—Ä–º—å': 50,            // Perm
  '–í–æ–ª–≥–æ–≥—Ä–∞–¥': 38,        // Volgograd
  '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä': 35,        // Krasnodar
  '–°–∞—Ä–∞—Ç–æ–≤': 194,         // Saratov
  '–¢—é–º–µ–Ω—å': 197,          // Tyumen
  '–¢–æ–ª—å—è—Ç—Ç–∏': 51,         // Tolyatti (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –°–∞–º–∞—Ä—ã)
  '–ò–∂–µ–≤—Å–∫': 44,           // Izhevsk
  '–ë–∞—Ä–Ω–∞—É–ª': 197,         // Barnaul
  '–£–ª—å—è–Ω–æ–≤—Å–∫': 195,       // Ulyanovsk
  '–ò—Ä–∫—É—Ç—Å–∫': 63,          // Irkutsk
  '–•–∞–±–∞—Ä–æ–≤—Å–∫': 76,        // Khabarovsk
  '–Ø—Ä–æ—Å–ª–∞–≤–ª—å': 16,        // Yaroslavl
  '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 75,      // Vladivostok
  '–ú–∞—Ö–∞—á–∫–∞–ª–∞': 28,        // Makhachkala
  '–¢–æ–º—Å–∫': 67,            // Tomsk
  '–û—Ä–µ–Ω–±—É—Ä–≥': 48,         // Orenburg
  '–ö–µ–º–µ—Ä–æ–≤–æ': 64,         // Kemerovo
  '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫': 64,      // Novokuznetsk (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ö–µ–º–µ—Ä–æ–≤–æ)
  '–†—è–∑–∞–Ω—å': 11,           // Ryazan
  '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å': 37,        // Astrakhan
  '–ü–µ–Ω–∑–∞': 49,            // Penza
  '–õ–∏–ø–µ—Ü–∫': 9,            // Lipetsk
  '–ö–∏—Ä–æ–≤': 46,            // Kirov
  '–ß–µ–±–æ–∫—Å–∞—Ä—ã': 45,        // Cheboksary
  '–¢—É–ª–∞': 15,             // Tula
  '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥': 22,      // Kaliningrad
  '–ë—Ä—è–Ω—Å–∫': 191,          // Bryansk
  '–ò–≤–∞–Ω–æ–≤–æ': 5,           // Ivanovo
  '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫': 56,     // Magnitogorsk (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ß–µ–ª—è–±–∏–Ω—Å–∫–∞)
  '–ö—É—Ä—Å–∫': 8,             // Kursk
  '–¢–≤–µ—Ä—å': 14,            // Tver
  '–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª': 54,     // Nizhny Tagil (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞)
  '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å': 36,       // Stavropol
  '–£–ª–∞–Ω-–£–¥—ç': 69,         // Ulan-Ude
  '–ë–µ–ª–≥–æ—Ä–æ–¥': 4,          // Belgorod
  '–°–æ—á–∏': 239,            // Sochi
  '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å': 959,     // Sevastopol
  '–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å': 146,     // Simferopol
};

// –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
const CONFIG = {
  // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  resultsDir: path.join(__dirname, 'data', 'results'),
  
  // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  intermediateDir: path.join(__dirname, 'data', 'intermediate'),
  
  // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ 
  keywordsFile: path.join(__dirname, 'keywords.txt'),
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  connection: {
    timeout: 60000,  // –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–º—Å)
    retries: 3       // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ
  },
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
  collection: {
    // –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞ (–º–∞–∫—Å 100)
    yandexPageSize: 10,
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–ª—è Google (–º–∞–∫—Å 100)
    googlePageSize: 100,
    
    // –¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    targetUniqueResults: 100,
    
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    maxPages: 5,
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–º—Å)
    delayBetweenRequests: 500,  // –£–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ 20% —Å 500 –¥–æ 500
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –≥–æ—Ä–æ–¥–∞–º–∏ (–º—Å)
    delayBetweenCities: 2000,   // –£–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ 20% —Å 2000 –¥–æ 2000
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
    maxRetries: 5,             // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ (—É–≤–µ–ª–∏—á–µ–Ω–æ —Å 3 –¥–æ 5)
    initialBackoff: 1000,      // –ù–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (–º—Å) - —É–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ 20%
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    saveIntermediate: true,    // –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å
    saveInterval: 10           // –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑)
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
  search: {
    // –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (2 = –º–µ—Å—è—Ü)
    within: 2,
    
    // –§–∏–ª—å—Ç—Ä –ø–æ—Ö–æ–∂–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    filter: 1
  },
  
  // –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
  debug: true
};

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
fs.ensureDirSync(CONFIG.resultsDir);
fs.ensureDirSync(CONFIG.intermediateDir);

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
 * @param {string} fileName - –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 * @param {boolean} isIntermediate - –§–ª–∞–≥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 * @returns {string|null} - –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
const saveResults = (data, fileName, isIntermediate = false) => {
  const timestamp = new Date().toISOString().replace(/:/g, '-');
  const targetDir = isIntermediate ? CONFIG.intermediateDir : CONFIG.resultsDir;
  const filePath = path.join(targetDir, `${fileName}.json`);
  
  try {
    fs.writeJsonSync(filePath, data, { spaces: 2 });
    if (!isIntermediate || CONFIG.debug) {
      console.log(`üíæ ${isIntermediate ? '–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ' : '–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ'} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${filePath}`);
    }
    return filePath;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${error.message}`);
    return null;
  }
};

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞
 * @param {string} fileName - –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 * @returns {Object|null} - –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
const loadIntermediateResults = (fileName) => {
  const filePath = path.join(CONFIG.intermediateDir, `${fileName}.json`);
  
  try {
    if (fs.existsSync(filePath)) {
      const data = fs.readJsonSync(filePath);
      console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ ${filePath}`);
      return data;
    }
    return null;
  } catch (error) {
    console.error(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${error.message}`);
    return null;
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≥–æ—Ä–æ–¥–∞
 * @param {Object} api - –≠–∫–∑–µ–º–ø–ª—è—Ä XmlRiverApi
 * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
 * @param {Object} city - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ
 * @param {string} engine - –ü–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (YANDEX –∏–ª–∏ GOOGLE)
 * @returns {Promise<Array>} - –ú–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 */
const getUniqueResults = async (api, query, city, engine = 'YANDEX') => {
  console.log(`\nüîç –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –≤ –≥–æ—Ä–æ–¥–µ ${city.name} (${engine})`);
  
  // –°–µ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL
  const uniqueUrls = new Set();
  
  // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const uniqueResults = [];
  
  // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  const startTime = Date.now();
  
  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0 (–¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞) –∏–ª–∏ 1 (–¥–ª—è Google)
  let page = engine === 'YANDEX' ? 0 : 1;
  
  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç 1-based (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
  const PAGE_OFFSET = 1;
  
  // –ü–æ–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü
  while (uniqueUrls.size < CONFIG.collection.targetUniqueResults && page < CONFIG.collection.maxPages) {
    console.log(`   üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + PAGE_OFFSET}/${CONFIG.collection.maxPages}`);
    
    // –û–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–æ–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
    const baseOptions = {
      page,                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º 0-based –ø–∞–≥–∏–Ω–∞—Ü–∏—é
      filter: CONFIG.search.filter, // –í–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ—Ö–æ–∂–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      within: CONFIG.search.within  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ –º–µ—Å—è—Ü
    };
    
    let options = { ...baseOptions };
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    if (engine === 'YANDEX') {
      options.groupby = CONFIG.collection.yandexPageSize;
      options.loc = city.code;
    } else if (engine === 'GOOGLE') {
      options.groupby = CONFIG.collection.googlePageSize; // –ü–æ–ª—É—á–∞–µ–º 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞ —Ä–∞–∑
      options.country = 2008; // –ö–æ–¥ –†–æ—Å—Å–∏–∏ –¥–ª—è Google
      options.domain = 10;    // google.ru –≤–º–µ—Å—Ç–æ google.com
    }
    
    try {
      // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
      // –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
      let results;
      let retries = 0;
      const maxRetries = CONFIG.collection.maxRetries || 5;  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ —Å 3 –¥–æ 5
      const initialBackoff = CONFIG.collection.initialBackoff || 2400; // –£–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ 20% —Å 2000 –¥–æ 2400 –º—Å
      let backoff = initialBackoff;
      
      while (retries <= maxRetries) {
        try {
          if (engine === 'YANDEX') {
            results = await api.searchYandex(query, options);
          } else {
            results = await api.searchGoogle(query, options);
          }
          break; // –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        } catch (requestError) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è —ç—Ç–æ–π –æ—à–∏–±–∫–∏
          const errorCode = requestError.code || 0;
          // –í—Å–µ –æ—à–∏–±–∫–∏ 500, 111 –∏ –æ—à–∏–±–∫–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å–∞ —Å—á–∏—Ç–∞–µ–º –º–æ–≥—É—â–∏–º–∏ –±—ã—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—ã–º–∏
          const isRetryableError = [500, 111].includes(errorCode) || 
                                 requestError.message.includes('–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—Ä–æ—Å') ||  
                                 requestError.message.includes('–û—Ç–≤–µ—Ç –æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω') ||
                                 requestError.message.includes('–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤');
          
          if (isRetryableError && retries < maxRetries) {
            retries++;
            console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ API (–∫–æ–¥ ${errorCode}): ${requestError.message}. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${retries}/${maxRetries} —á–µ—Ä–µ–∑ ${backoff/1000} —Å–µ–∫...`);
            
            // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –æ—Ç–∫–∞—Ç
            await new Promise(resolve => setTimeout(resolve, backoff));
            backoff *= 2; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ
          } else {
            // –ù–µ –º–æ–∂–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–ª–∏ –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ø–æ–ø—ã—Ç–∫–∏
            throw requestError;
          }
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      if (results && results.results && results.results.length > 0) {
        const pageResults = results.results;
        const initialUniqueCount = uniqueUrls.size;
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for (const result of pageResults) {
          if (result.url && !uniqueUrls.has(result.url)) {
            uniqueUrls.add(result.url);
            uniqueResults.push({
              ...result,
              page: page + PAGE_OFFSET,
              globalPosition: uniqueResults.length + 1
            });
          }
        }
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const newUniqueCount = uniqueUrls.size - initialUniqueCount;
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        const currentProgress = Math.min(uniqueUrls.size / CONFIG.collection.targetUniqueResults, 1);
        const elapsedTime = (Date.now() - startTime) / 1000; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        let remainingTime = 0;
        
        if (currentProgress > 0 && currentProgress < 1) {
          // –û—Ü–µ–Ω–∫–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
          remainingTime = (elapsedTime / currentProgress) * (1 - currentProgress);
        }
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        const remainingMinutes = Math.floor(remainingTime / 60);
        const remainingSeconds = Math.floor(remainingTime % 60);
        const timeStr = remainingMinutes > 0 ? 
          `${remainingMinutes}–º ${remainingSeconds}—Å` : 
          `${remainingSeconds}—Å`;

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Å–∫–æ—Ä–æ—Å—Ç—å —Å–±–æ—Ä–∞ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –º–∏–Ω—É—Ç—É)
        const collectionRate = uniqueUrls.size / (elapsedTime / 60 || 0.1);
        const rateStr = collectionRate.toFixed(1);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        const duplicateRate = pageResults.length > 0 ? 
          ((pageResults.length - newUniqueCount) / pageResults.length * 100).toFixed(1) : 
          '0.0';
        
        console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + PAGE_OFFSET}: –ø–æ–ª—É—á–µ–Ω–æ ${pageResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (${newUniqueCount} –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö)`);
        console.log(`   üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: ${Math.floor(currentProgress * 100)}% | ${uniqueUrls.size}/${CONFIG.collection.targetUniqueResults} URL | –î—É–±–ª–∏–∫–∞—Ç—ã: ${duplicateRate}%`);
        console.log(`   ‚è±Ô∏è –°–∫–æ—Ä–æ—Å—Ç—å: ${rateStr} —Ä–µ–∑/–º–∏–Ω | –û—Å—Ç–∞–ª–æ—Å—å: ~${timeStr}`);
        
        // –°–æ–∑–¥–∞–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        const progressBarWidth = 20;
        const filledWidth = Math.floor(currentProgress * progressBarWidth);
        const progressBar = '‚ñà'.repeat(filledWidth) + '‚ñë'.repeat(progressBarWidth - filledWidth);
        console.log(`   [${progressBar}] ${Math.floor(currentProgress * 100)}%`);
        
        // –ï—Å–ª–∏ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞ –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–±–æ—Ä
        if (newUniqueCount === 0) {
          console.log(`   üîç –ù–µ—Ç –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–±–æ—Ä`);
          break;
        }
      } else {
        console.log(`   ‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + PAGE_OFFSET}: –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
      }
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + PAGE_OFFSET}: ${error.message}`);
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      if (CONFIG.debug) {
        if (error.response) {
          console.error(`   ‚ÑπÔ∏è –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ API:`);
          console.error(`     - –ö–æ–¥: ${error.code || 'N/A'}`);
          console.error(`     - –°—Ç–∞—Ç—É—Å: ${error.response?.status || 'N/A'}`);
          console.error(`     - –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data || error.message}`);
        } else if (error.stack) {
          console.error(`   ‚ÑπÔ∏è –°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤: ${error.stack.split('\n')[0]}`);
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
      const errorObject = {
        error: true,
        message: error.message,
        code: error.code || 'unknown',
        page: page + PAGE_OFFSET,
        timestamp: new Date().toISOString()
      };
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ (–∫–æ–¥ 15)
      if (error.message.includes('–î–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞') || 
          error.message.includes('–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã') ||
          error.message.includes('code="15"')) {
        console.log(`   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –î–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...`);
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        uniqueResults.push({
          empty: true,
          reason: '–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞',
          query: query,
          engine: engine
        });
        break; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
      }
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–∞—è (–Ω–µ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤), –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –µ—ë –¥–∞–ª—å—à–µ
      else if (page === (engine === 'YANDEX' ? 0 : 1) && uniqueResults.length === 0 && error.code !== 111) {
        throw new Error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
      }
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    page++;
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    if (page < CONFIG.collection.maxPages) {
      await new Promise(resolve => setTimeout(resolve, CONFIG.collection.delayBetweenRequests));
    }
  }
  
  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const totalTime = Math.floor((Date.now() - startTime) / 1000);
  const minutes = Math.floor(totalTime / 60);
  const seconds = totalTime % 60;
  const timeStr = minutes > 0 ? `${minutes}–º ${seconds}—Å` : `${seconds}—Å`;
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log(`\nüìä –°–æ–±—Ä–∞–Ω–æ ${uniqueResults.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞ ${page} —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –≤ –≥–æ—Ä–æ–¥–µ ${city.name}`);
  console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${timeStr}`);
  
  return uniqueResults;
};

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
 */
const main = async () => {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º allResults –¥–æ try-catch –±–ª–æ–∫–∞, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –≤ –±–ª–æ–∫–µ catch
  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const allResults = {
    timestamp: new Date().toISOString(),
    totalKeywords: 0,  // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ
    totalCities: 0,    // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ
    citiesData: {}
  };
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 100 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –ø–æ –∫—Ä—É–ø–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º');
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    fs.ensureDirSync(CONFIG.resultsDir);
    fs.ensureDirSync(CONFIG.intermediateDir);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –∫–ª–∏–µ–Ω—Ç
    const api = new XmlRiverApi({
      userId: process.env.XMLRIVER_USER_ID,
      apiKey: process.env.XMLRIVER_API_KEY,
      resultsDir: CONFIG.resultsDir,
      maxThreads: CONFIG.collection.maxThreads || 10,
      maxRetries: CONFIG.connection.retries,
      requestTimeout: CONFIG.connection.timeout,
      debug: CONFIG.debug
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑
    const keywords = await readKeywordsFromFile(CONFIG.keywordsFile);
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
    const cities = Object.entries(MAJOR_CITIES).map(([name, code]) => ({ name, code }));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    try {
      const balance = await api.getBalance();
      console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: ${error.message}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const resumeFile = 'serp_collection_progress';
    let resumeData = loadIntermediateResults(resumeFile);
    let startFromCity = 0;
    let startFromKeyword = 0;
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (resumeData) {
      console.log(`üîÑ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      startFromCity = resumeData.currentCityIndex || 0;
      startFromKeyword = resumeData.currentKeywordIndex || 0;
      
      console.log(`‚úîÔ∏è –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –≥–æ—Ä–æ–¥–∞ ${cities[startFromCity].name} (–∏–Ω–¥–µ–∫—Å ${startFromCity}) –∏ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ "${keywords[startFromKeyword]}" (–∏–Ω–¥–µ–∫—Å ${startFromKeyword})`);
    }
    
    // –û–±—â–∏–π —Ç–∞–π–º–µ—Ä –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    const globalStartTime = Date.now();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    allResults.totalKeywords = keywords.length;
    allResults.totalCities = cities.length;
    
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    for (let cityIndex = startFromCity; cityIndex < cities.length; cityIndex++) {
      const city = cities[cityIndex];
      console.log(`\nüèôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞: ${city.name} (–∫–æ–¥ ${city.code}) - ${cityIndex + 1}/${cities.length}`);
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!allResults.citiesData[city.name]) {
        allResults.citiesData[city.name] = {
          code: city.code,
          keywords: {},
          totalKeywords: keywords.length,
          timestamp: new Date().toISOString()
        };
      }
      
      // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      // –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –Ω–æ–≤–æ–º—É –≥–æ—Ä–æ–¥—É –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –∫–ª—é—á–∞
      const keywordStartIndex = (cityIndex === startFromCity) ? startFromKeyword : 0;
      
      for (let keywordIndex = keywordStartIndex; keywordIndex < keywords.length; keywordIndex++) {
        const keyword = keywords[keywordIndex];
        const totalProcessed = cityIndex * keywords.length + keywordIndex + 1;
        const total = cities.length * keywords.length;
        const percentComplete = ((totalProcessed / total) * 100).toFixed(1);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
        const elapsedTime = (Date.now() - globalStartTime) / 1000; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        const globalProgress = totalProcessed / total;
        
        // –û—Ü–µ–Ω–∫–∞ –æ–±—â–µ–≥–æ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
        let remainingGlobalTime = 0;
        if (globalProgress > 0 && globalProgress < 1) {
          remainingGlobalTime = (elapsedTime / globalProgress) * (1 - globalProgress);
        }
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        const avgKeywordsPerMin = totalProcessed / (elapsedTime / 60 || 0.1);
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        const remainingHours = Math.floor(remainingGlobalTime / 3600);
        const remainingMinutes = Math.floor((remainingGlobalTime % 3600) / 60);
        const remainingSeconds = Math.floor(remainingGlobalTime % 60);
        
        let timeStr = '';
        if (remainingHours > 0) {
          timeStr = `${remainingHours}—á ${remainingMinutes}–º ${remainingSeconds}—Å`;
        } else if (remainingMinutes > 0) {
          timeStr = `${remainingMinutes}–º ${remainingSeconds}—Å`;
        } else {
          timeStr = `${remainingSeconds}—Å`;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
        const progressBarWidth = 20;
        const filledWidth = Math.floor(globalProgress * progressBarWidth);
        const globalProgressBar = '‚ñà'.repeat(filledWidth) + '‚ñë'.repeat(progressBarWidth - filledWidth);
        
        console.log(`\nüîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª—é—á–∞ "${keyword}" (${keywordIndex + 1}/${keywords.length}) - –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${percentComplete}%`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ –æ–±—â–µ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        console.log(`üìä –û–ë–©–ò–ô –ü–†–û–ì–†–ï–°–°: ${Math.floor(globalProgress * 100)}% | –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalProcessed}/${total} –∫–ª—é—á–µ–π`);
        console.log(`‚è±Ô∏è –°–∫–æ—Ä–æ—Å—Ç—å: ${avgKeywordsPerMin.toFixed(1)} –∫–ª—é—á–µ–π/–º–∏–Ω | –û–±—â–µ–µ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è: ~${timeStr}`);
        console.log(`[–æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${globalProgressBar}] ${Math.floor(globalProgress * 100)}%`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª—é—á–∞ –≤ —Ç–µ–∫—É—â–µ–º –≥–æ—Ä–æ–¥–µ
        if (!allResults.citiesData[city.name].keywords[keyword]) {
          // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –Ø–Ω–¥–µ–∫—Å–∞
          const yandexResults = await getUniqueResults(api, keyword, city, 'YANDEX');
          
          // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Google
          const googleResults = await getUniqueResults(api, keyword, city, 'GOOGLE');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
          allResults.citiesData[city.name].keywords[keyword] = {
            yandex: {
              totalResults: yandexResults.length,
              uniqueUrls: yandexResults.length,
              results: yandexResults
            },
            google: {
              totalResults: googleResults.length,
              uniqueUrls: googleResults.length,
              results: googleResults
            },
            timestamp: new Date().toISOString()
          };
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
          saveResults(
            {
              query: keyword,
              city: city.name,
              cityCode: city.code,
              timestamp: new Date().toISOString(),
              yandex: {
                totalResults: yandexResults.length,
                results: yandexResults
              },
              google: {
                totalResults: googleResults.length,
                results: googleResults
              }
            },
            `${city.name.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}_${keyword.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}`
          );
        } else {
          console.log(`‚ôªÔ∏è –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–ª—é—á–∞ "${keyword}" –≤ –≥–æ—Ä–æ–¥–µ ${city.name} —É–∂–µ —Å–æ–±—Ä–∞–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
        // –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ –º—ã –Ω–∞—á–Ω–µ–º —Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
        saveResults(
          {
            timestamp: new Date().toISOString(),
            progress: {
              total: total,
              processed: totalProcessed,
              percent: percentComplete
            },
            currentCityIndex: cityIndex,
            currentKeywordIndex: keywordIndex + 1, // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∏–Ω–¥–µ–∫—Å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å –Ω–µ–≥–æ
            cities: cities.map(c => c.name),
            keywords: keywords.length
          },
          resumeFile,
          true
        );
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≥–æ—Ä–æ–¥—É
      saveResults(
        {
          city: city.name,
          cityCode: city.code,
          timestamp: new Date().toISOString(),
          totalKeywords: keywords.length,
          keywords: allResults.citiesData[city.name].keywords
        },
        `city_${city.name.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}`
      );
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≥–æ—Ä–æ–¥–∞–º–∏
      if (cityIndex < cities.length - 1) {
        console.log(`‚è≥ –ü–∞—É–∑–∞ ${CONFIG.collection.delayBetweenCities / 1000} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≥–æ—Ä–æ–¥–æ–º...`);
        await new Promise(resolve => setTimeout(resolve, CONFIG.collection.delayBetweenCities));
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const finalReportPath = saveResults(
      allResults,
      `full_report_${new Date().toISOString().replace(/:/g, '-')}`
    );
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤
    console.log(`üîç –°–±–æ—Ä –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL...`);
    const allUniqueUrls = new Set();
    const urlData = {
      yandex: [],
      google: []
    };
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≥–æ—Ä–æ–¥–∞–º –∏ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º, —Å–æ–±–∏—Ä–∞—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL
    Object.values(allResults.citiesData).forEach(cityData => {
      Object.entries(cityData.keywords).forEach(([keyword, data]) => {
        // –î–æ–±–∞–≤–ª—è–µ–º URL –∏–∑ –Ø–Ω–¥–µ–∫—Å–∞
        data.yandex?.results?.forEach(result => {
          if (result.url && !allUniqueUrls.has(result.url)) {
            allUniqueUrls.add(result.url);
            urlData.yandex.push({
              url: result.url,
              title: result.title || '',
              snippet: result.snippet || '',
              keyword,
              city: cityData.name,
              engine: 'yandex'
            });
          }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º URL –∏–∑ Google
        data.google?.results?.forEach(result => {
          if (result.url && !allUniqueUrls.has(result.url)) {
            allUniqueUrls.add(result.url);
            urlData.google.push({
              url: result.url,
              title: result.title || '',
              snippet: result.snippet || '',
              keyword,
              city: cityData.name,
              engine: 'google'
            });
          }
        });
      });
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª
    const allUrlsPath = saveResults(
      {
        timestamp: new Date().toISOString(),
        totalUniqueUrls: allUniqueUrls.size,
        yandexUrls: urlData.yandex.length,
        googleUrls: urlData.google.length,
        yandex: urlData.yandex,
        google: urlData.google,
        allUrls: [...urlData.yandex, ...urlData.google]
      },
      `all_unique_urls_${new Date().toISOString().replace(/:/g, '-')}`
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–∫–∂–µ –≤ CSV —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏–º–ø–æ—Ä—Ç–∞
    try {
      const csvPath = path.join(CONFIG.resultsDir, `all_unique_urls_${new Date().toISOString().replace(/:/g, '-')}.csv`);
      const csvHeader = 'URL,Title,Snippet,Keyword,City,Engine\n';
      let csvContent = csvHeader;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ URL –≤ CSV
      [...urlData.yandex, ...urlData.google].forEach(item => {
        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –≤ –ø–æ–ª—è—Ö
        const escapeCSV = (field) => {
          if (!field) return '';
          const escaped = field.toString().replace(/"/g, '""');
          return `"${escaped}"`;
        };
        
        csvContent += `${escapeCSV(item.url)},${escapeCSV(item.title)},${escapeCSV(item.snippet)},${escapeCSV(item.keyword)},${escapeCSV(item.city)},${escapeCSV(item.engine)}\n`;
      });
      
      fs.writeFileSync(csvPath, csvContent);
      console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω CSV —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ URL: ${csvPath}`);
    } catch (e) {
      console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ CSV: ${e.message}`);
    }
    
    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω
    const progressFilePath = path.join(CONFIG.intermediateDir, `${resumeFile}.json`);
    if (fs.existsSync(progressFilePath)) {
      try {
        fs.unlinkSync(progressFilePath);
        console.log(`üöÆ –§–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω: ${progressFilePath}`);
      } catch (e) {
        console.error(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${e.message}`);
      }
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const globalEndTime = Date.now();
    const totalTimeMs = globalEndTime - globalStartTime;
    const totalTimeSec = Math.floor(totalTimeMs / 1000);
    const totalMinutes = Math.floor(totalTimeSec / 60);
    const totalSeconds = totalTimeSec % 60;
    const totalHours = Math.floor(totalMinutes / 60);
    const minutes = totalMinutes % 60;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
    let timeStr = '';
    if (totalHours > 0) {
      timeStr = `${totalHours}—á ${minutes}–º ${totalSeconds}—Å`;
    } else if (minutes > 0) {
      timeStr = `${minutes}–º ${totalSeconds}—Å`;
    } else {
      timeStr = `${totalSeconds}—Å`;
    }
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö URL
    let totalUrls = 0;
    let totalYandexUrls = 0;
    let totalGoogleUrls = 0;
    
    Object.values(allResults.citiesData).forEach(cityData => {
      Object.values(cityData.keywords).forEach(keywordData => {
        totalYandexUrls += keywordData.yandex?.results?.length || 0;
        totalGoogleUrls += keywordData.google?.results?.length || 0;
      });
    });
    
    totalUrls = totalYandexUrls + totalGoogleUrls;
    
    // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log(`\nüéâ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!`);
    console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≥–æ—Ä–æ–¥–æ–≤: ${cities.length}`);
    console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑: ${keywords.length}`);
    console.log(`   - –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${cities.length * keywords.length * 2} (–Ø–Ω–¥–µ–∫—Å + Google)`);
    console.log(`   - –í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ URL: ${totalUrls} (–Ø–Ω–¥–µ–∫—Å: ${totalYandexUrls}, Google: ${totalGoogleUrls})`);
    console.log(`‚è∞ –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${timeStr}`);
    console.log(`üíæ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: ${finalReportPath}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    try {
      const finalBalance = await api.getBalance();
      console.log(`üí∞ –û—Å—Ç–∞—Ç–æ–∫ –±–∞–ª–∞–Ω—Å–∞: ${finalBalance}`);
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 1: ${error.message}`);
      console.log(`   ‚ÑπÔ∏è –°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤: ${error}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      if (error.message.includes('–î–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞') ||
          error.message.includes('–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã') ||
          error.message.includes('code="15"')) {
        console.log(`   ‚ö†Ô∏è –î–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...`);
        return {
          query,
          city: city.name,
          engine,
          uniqueResults: [],
          totalResults: 0,
          timestamp: new Date().toISOString(),
          note: '–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞'
        };
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –Ω–µ —É–º–µ–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
      throw new Error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
    }
    console.error(error.stack);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    if (allResults && Object.keys(allResults).length > 0) {
      console.log(`üö® –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...`);
      saveResults(allResults, `error_recovery_${new Date().toISOString().replace(/:/g, '-')}`);
    }
  } catch (error) {
    console.error(`\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    console.error(error.stack);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    if (allResults && Object.keys(allResults).length > 0) {
      console.log(`üö® –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...`);
      saveResults(allResults, `error_recovery_${new Date().toISOString().replace(/:/g, '-')}`);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { main, getUniqueResults };