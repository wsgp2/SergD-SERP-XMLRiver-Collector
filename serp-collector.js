/**
 * @file serp-collector.js
 * @description –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏ –Ø–Ω–¥–µ–∫—Å–∞ –∏ Google –¥–ª—è 100 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑
 * @author Sergei Dyshkant (SergD)
 */

require('dotenv').config();
const fs = require('fs-extra');
const path = require('path');
const { XmlRiverApi } = require('./src/xmlriver-api');
const readline = require('readline');

// –ö–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –∏–∑ —Ñ–∞–π–ª–∞
const readKeywordsFromFile = (filePath) => {
  return new Promise((resolve, reject) => {
    try {
      const keywords = [];
      const fileStream = fs.createReadStream(filePath);
      const rl = readline.createInterface({
        input: fileStream,
        crlfDelay: Infinity
      });

      rl.on('line', (line) => {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        const trimmedLine = line.trim();
        if (trimmedLine && !trimmedLine.startsWith('#') && !trimmedLine.startsWith('‚∏ª')) {
          keywords.push(trimmedLine);
        }
      });

      rl.on('close', () => {
        console.log(`–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${keywords.length} –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –∏ ${Object.keys(MAJOR_CITIES).length} –≥–æ—Ä–æ–¥–æ–≤`);
        console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∞: Yandex - ${CONFIG.collection.yandexPageSize} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/—Å—Ç—Ä–∞–Ω–∏—Ü–∞, Google - ${CONFIG.collection.googlePageSize} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤/–∑–∞–ø—Ä–æ—Å`);
        resolve(keywords);
      });

      rl.on('error', (err) => {
        reject(err);
      });
    } catch (error) {
      reject(error);
    }
  });
};

// –°–ø–∏—Å–æ–∫ –∫—Ä—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏ —Å –Ω–∞—Å–µ–ª–µ–Ω–∏–µ–º –±–æ–ª–µ–µ 500k —á–µ–ª–æ–≤–µ–∫
const MAJOR_CITIES = {
  '–ú–æ—Å–∫–≤–∞': 213,          // Moscow
  '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': 2,   // Saint Petersburg
  '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 65,      // Novosibirsk
  '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 54,     // Ekaterinburg
  '–ö–∞–∑–∞–Ω—å': 43,           // Kazan
  '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥': 47,  // Nizhny Novgorod
  '–ß–µ–ª—è–±–∏–Ω—Å–∫': 56,        // Chelyabinsk
  '–û–º—Å–∫': 66,             // Omsk
  '–°–∞–º–∞—Ä–∞': 51,           // Samara
  '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É': 39,   // Rostov-on-Don
  '–£—Ñ–∞': 172,             // Ufa
  '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 62,       // Krasnoyarsk
  '–í–æ—Ä–æ–Ω–µ–∂': 193,         // Voronezh
  '–ü–µ—Ä–º—å': 50,            // Perm
  '–í–æ–ª–≥–æ–≥—Ä–∞–¥': 38,        // Volgograd
  '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä': 35,        // Krasnodar
  '–°–∞—Ä–∞—Ç–æ–≤': 194,         // Saratov
  '–¢—é–º–µ–Ω—å': 197,          // Tyumen
  '–¢–æ–ª—å—è—Ç—Ç–∏': 51,         // Tolyatti (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –°–∞–º–∞—Ä—ã)
  '–ò–∂–µ–≤—Å–∫': 44,           // Izhevsk
  '–ë–∞—Ä–Ω–∞—É–ª': 197,         // Barnaul
  '–£–ª—å—è–Ω–æ–≤—Å–∫': 195,       // Ulyanovsk
  '–ò—Ä–∫—É—Ç—Å–∫': 63,          // Irkutsk
  '–•–∞–±–∞—Ä–æ–≤—Å–∫': 76,        // Khabarovsk
  '–Ø—Ä–æ—Å–ª–∞–≤–ª—å': 16,        // Yaroslavl
  '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 75,      // Vladivostok
  '–ú–∞—Ö–∞—á–∫–∞–ª–∞': 28,        // Makhachkala
  '–¢–æ–º—Å–∫': 67,            // Tomsk
  '–û—Ä–µ–Ω–±—É—Ä–≥': 48,         // Orenburg
  '–ö–µ–º–µ—Ä–æ–≤–æ': 64,         // Kemerovo
  '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫': 64,      // Novokuznetsk (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ö–µ–º–µ—Ä–æ–≤–æ)
  '–†—è–∑–∞–Ω—å': 11,           // Ryazan
  '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å': 37,        // Astrakhan
  '–ü–µ–Ω–∑–∞': 49,            // Penza
  '–õ–∏–ø–µ—Ü–∫': 9,            // Lipetsk
  '–ö–∏—Ä–æ–≤': 46,            // Kirov
  '–ß–µ–±–æ–∫—Å–∞—Ä—ã': 45,        // Cheboksary
  '–¢—É–ª–∞': 15,             // Tula
  '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥': 22,      // Kaliningrad
  '–ë—Ä—è–Ω—Å–∫': 191,          // Bryansk
  '–ò–≤–∞–Ω–æ–≤–æ': 5,           // Ivanovo
  '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫': 56,     // Magnitogorsk (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ß–µ–ª—è–±–∏–Ω—Å–∫–∞)
  '–ö—É—Ä—Å–∫': 8,             // Kursk
  '–¢–≤–µ—Ä—å': 14,            // Tver
  '–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª': 54,     // Nizhny Tagil (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞)
  '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å': 36,       // Stavropol
  '–£–ª–∞–Ω-–£–¥—ç': 69,         // Ulan-Ude
  '–ë–µ–ª–≥–æ—Ä–æ–¥': 4,          // Belgorod
  '–°–æ—á–∏': 239,            // Sochi
  '–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å': 959,     // Sevastopol
  '–°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å': 146,     // Simferopol
};

// –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
const CONFIG = {
  // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  resultsDir: path.join(__dirname, 'data', 'results'),
  
  // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ 
  keywordsPath: path.join(__dirname, 'keywords.txt'),
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∞
  collection: {
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å
    targetUniqueResults: 100,
    
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ –∑–∞–ø—Ä–æ—Å
    maxPages: 15,
    
    // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    yandexPageSize: 10,
    googlePageSize: 100,
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ –º—Å
    delayBetweenRequests: 1000,
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –≥–æ—Ä–æ–¥–∞–º–∏ –≤ –º—Å
    delayBetweenCities: 5000,
    
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
    maxThreads: 5
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
  search: {
    // –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (2 = –º–µ—Å—è—Ü)
    within: 2,
    
    // –§–∏–ª—å—Ç—Ä –ø–æ—Ö–æ–∂–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    filter: 1
  },
  
  // –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
  debug: true
};

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
 * @param {string} fileName - –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
 */
const saveResults = (data, fileName) => {
  try {
    const filePath = path.join(CONFIG.resultsDir, `${fileName}.json`);
    fs.writeJsonSync(filePath, data, { spaces: 2 });
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ${filePath}`);
    return filePath;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${error.message}`);
    return null;
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –≥–æ—Ä–æ–¥–∞
 * @param {Object} api - –≠–∫–∑–µ–º–ø–ª—è—Ä XmlRiverApi
 * @param {string} query - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
 * @param {Object} city - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ
 * @param {string} engine - –ü–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (YANDEX –∏–ª–∏ GOOGLE)
 * @returns {Promise<Array>} - –ú–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 */
const getUniqueResults = async (api, query, city, engine = 'YANDEX') => {
  console.log(`\nüîç –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –≤ –≥–æ—Ä–æ–¥–µ ${city.name} (${engine})`);
  
  // –°–µ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö URL
  const uniqueUrls = new Set();
  
  // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const uniqueResults = [];
  
  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0 (–¥–ª—è –Ø–Ω–¥–µ–∫—Å–∞)
  let page = 0;
  
  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç 1-based (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
  const PAGE_OFFSET = 1;
  
  // –ü–æ–∫–∞ –Ω–µ —Å–æ–±—Ä–∞–ª–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü
  while (uniqueUrls.size < CONFIG.collection.targetUniqueResults && page < CONFIG.collection.maxPages) {
    console.log(`   üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + PAGE_OFFSET}/${CONFIG.collection.maxPages}`);
    
    // –û–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–±–æ–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
    const baseOptions = {
      page,                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º 0-based –ø–∞–≥–∏–Ω–∞—Ü–∏—é
      filter: CONFIG.search.filter, // –í–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ—Ö–æ–∂–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      within: CONFIG.search.within  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞ –º–µ—Å—è—Ü
    };
    
    let options = { ...baseOptions };
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    if (engine === 'YANDEX') {
      options.groupby = CONFIG.collection.yandexPageSize;
      options.loc = city.code;
    } else if (engine === 'GOOGLE') {
      options.groupby = CONFIG.collection.googlePageSize; // –ü–æ–ª—É—á–∞–µ–º 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞ —Ä–∞–∑
      options.country = 2008; // –ö–æ–¥ –†–æ—Å—Å–∏–∏ –¥–ª—è Google
      options.domain = 10;    // google.ru –≤–º–µ—Å—Ç–æ google.com
    }
    
    try {
      // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
      let results;
      if (engine === 'YANDEX') {
        results = await api.searchYandex(query, options);
      } else {
        results = await api.searchGoogle(query, options);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      if (results && results.results && results.results.length > 0) {
        const pageResults = results.results;
        const initialUniqueCount = uniqueUrls.size;
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for (const result of pageResults) {
          if (result.url && !uniqueUrls.has(result.url)) {
            uniqueUrls.add(result.url);
            uniqueResults.push({
              ...result,
              page: page + PAGE_OFFSET,
              globalPosition: uniqueResults.length + 1
            });
          }
        }
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const newUniqueCount = uniqueUrls.size - initialUniqueCount;
        
        console.log(`   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + PAGE_OFFSET}: –ø–æ–ª—É—á–µ–Ω–æ ${pageResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (${newUniqueCount} –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö)`);
        
        // –ï—Å–ª–∏ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞ –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        if (newUniqueCount === 0) {
          console.log(`   ‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + PAGE_OFFSET} –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞ –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
        }
      } else {
        console.log(`   ‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + PAGE_OFFSET}: –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
      }
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${page + PAGE_OFFSET}: ${error.message}`);
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    page++;
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    if (page < CONFIG.collection.maxPages) {
      await new Promise(resolve => setTimeout(resolve, CONFIG.collection.delayBetweenRequests));
    }
  }
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log(`\nüìä –°–æ–±—Ä–∞–Ω–æ ${uniqueResults.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞ ${page} —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}" –≤ –≥–æ—Ä–æ–¥–µ ${city.name}`);
  
  return uniqueResults;
};

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
 */
async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 100 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ –ø–æ –∫—Ä—É–ø–Ω—ã–º –≥–æ—Ä–æ–¥–∞–º');
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    fs.ensureDirSync(CONFIG.resultsDir);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã
    const keywords = await readKeywordsFromFile(CONFIG.keywordsPath);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    const cities = Object.entries(MAJOR_CITIES).map(([name, code]) => ({
      name,
      code
    }));
    
    console.log(`–í—Å–µ–≥–æ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞: ${cities.length}`);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –∫–ª–∏–µ–Ω—Ç
    const api = new XmlRiverApi({
      userId: process.env.XMLRIVER_USER_ID,
      apiKey: process.env.XMLRIVER_API_KEY,
      resultsDir: CONFIG.resultsDir,
      maxThreads: CONFIG.collection.maxThreads,
      debug: CONFIG.debug
    });
    
    // –í—ã–≤–æ–¥–∏–º –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞
    try {
      const balance = await api.getBalance();
      console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: ${error.message}`);
    }
    
    // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const allResults = {
      timestamp: new Date().toISOString(),
      totalKeywords: keywords.length,
      totalCities: cities.length,
      citiesData: {}
    };
    
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    for (const city of cities) {
      console.log(`\nüèôÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞: ${city.name} (–∫–æ–¥ ${city.code})`);
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞
      allResults.citiesData[city.name] = {
        code: city.code,
        keywords: {},
        totalKeywords: keywords.length,
        timestamp: new Date().toISOString()
      };
      
      // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
      for (const keyword of keywords) {
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –Ø–Ω–¥–µ–∫—Å–∞
        const yandexResults = await getUniqueResults(api, keyword, city, 'YANDEX');
        
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Google
        const googleResults = await getUniqueResults(api, keyword, city, 'GOOGLE');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
        allResults.citiesData[city.name].keywords[keyword] = {
          yandex: {
            totalResults: yandexResults.length,
            uniqueUrls: yandexResults.length,
            results: yandexResults
          },
          google: {
            totalResults: googleResults.length,
            uniqueUrls: googleResults.length,
            results: googleResults
          }
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
        saveResults(
          {
            query: keyword,
            city: city.name,
            cityCode: city.code,
            timestamp: new Date().toISOString(),
            yandex: {
              totalResults: yandexResults.length,
              results: yandexResults
            },
            google: {
              totalResults: googleResults.length,
              results: googleResults
            }
          },
          `${city.name.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}_${keyword.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}`
        );
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≥–æ—Ä–æ–¥—É
      saveResults(
        {
          city: city.name,
          cityCode: city.code,
          timestamp: new Date().toISOString(),
          totalKeywords: keywords.length,
          keywords: allResults.citiesData[city.name].keywords
        },
        `city_${city.name.toLowerCase().replace(/[^a-z–∞-—è0-9]/g, '_')}`
      );
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≥–æ—Ä–æ–¥–∞–º–∏
      if (cities.indexOf(city) < cities.length - 1) {
        console.log(`‚è≥ –ü–∞—É–∑–∞ ${CONFIG.collection.delayBetweenCities / 1000} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≥–æ—Ä–æ–¥–æ–º...`);
        await new Promise(resolve => setTimeout(resolve, CONFIG.collection.delayBetweenCities));
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const finalReportPath = saveResults(
      allResults,
      `full_report_${new Date().toISOString().replace(/:/g, '-')}`
    );
    
    console.log(`\nüéâ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: ${finalReportPath}`);
    
  } catch (error) {
    console.error(`\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { main, getUniqueResults };
