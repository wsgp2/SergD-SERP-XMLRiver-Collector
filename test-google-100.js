/**
 * @file test-google-100.js
 * @description –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ Google API
 */

require('dotenv').config();
const { XmlRiverApi } = require('./src/xmlriver-api');
const fs = require('fs-extra');
const path = require('path');

async function testGoogle100() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ Google API');
  
  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
  const api = new XmlRiverApi({
    userId: process.env.XMLRIVER_USER_ID,
    apiKey: process.env.XMLRIVER_API_KEY,
    debug: true
  });
  
  // –ó–∞–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const query = '–∫—Ä–µ–¥–∏—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞';
  
  try {
    console.log(`\nüß™ –ó–∞–ø—Ä–æ—Å 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ Google API –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ`);
    const result = await api.searchGoogle(query, {
      domain: 10,      // google.ru
      country: 2008,   // –†–æ—Å—Å–∏—è
      page: 1,         // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      groupby: 100,    // 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      lr: 'lang_ru'    // –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
    });
    
    console.log(`üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞: domain=10, country=2008, page=1, groupby=100, lr=lang_ru`);
    
    if (result && result.results) {
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${result.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
      
      if (result.results.length > 0) {
        console.log(`\nüìä –ü–µ—Ä–≤—ã–µ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:`);
        result.results.slice(0, 5).forEach((item, index) => {
          console.log(`   ${index + 1}. ${item.url}`);
        });
        
        // –°–æ—Ö—Ä–∞–Ω–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        const resultsDir = path.join(__dirname, 'data', 'test-results');
        fs.ensureDirSync(resultsDir);
        
        const timestamp = new Date().toISOString().replace(/:/g, '-');
        const resultsFile = path.join(resultsDir, `google-100-results-${timestamp}.json`);
        
        fs.writeJSONSync(resultsFile, {
          query,
          count: result.results.length,
          results: result.results
        }, { spaces: 2 });
        
        console.log(`\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: ${resultsFile}`);
      }
    } else {
      console.log(`‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ: ${JSON.stringify(result)}`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testGoogle100().catch(console.error);
